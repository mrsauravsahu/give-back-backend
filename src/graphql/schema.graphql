type User {
  id: Int,
  facebook: Facebook,
  createdAt: String,
  updatedAt: String
}

type Facebook {
  firstName: String,
  lastName: String,
  pictureUrl: String,
  fbId: String,
}

type Trip {
  id: Int,
  name: String,
  description: String,
  endDate: String,
  createdAt: String,
  updatedAt: String,
  members: [User]
}

type Query {
  me(id: Int): Tables
  friends(id: Int): Tables
  trips(id: Int): Tables
}

schema {
  query: Query
}

type Tables {
  facebooks: [Facebook]
  friendships: [FriendShip]
  shares: [Share]
  transactions: [Transaction]
  trips: [Trip]
  users: [User]
}

type FriendShip {
  userId: Int
  friendId: Int
  createdAt: String
  updatedAt: String
}

type Share {
  amount: Float,
  userId: Int
  transactionId: Int
  tripId: Int
  createdAt: String
  updatedAt: String
}

type Transaction {
  amount: Float
  tripId: Int
  userId: Int
}